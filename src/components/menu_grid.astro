---
interface Props {
  headline1: string;
  headline2: string;
  headline3: string;
  headline4: string;
  headline5: string;
  headline6: string;
  text1: string;
  text2: string;
  text3: string;
  text4: string;
  text5: string;
  text6: string;
  url1: string;
  url2: string;
  url3: string;
  url4: string;
  url5: string;
  url6: string;
}

const {
  headline1 = "Deine Karriere",
  headline2 = "Das bieten wir",
  headline3 = "Veranstaltungen",
  headline4 = "Darstellung",
  headline5 = "Mitglieder",
  headline6 = "Kontaktiere uns",
  text1 = "Rom braucht dich!\nEgal ob als Zivil oder Militär.\nDu bist herzlich eingeladen.",
  text2 = "euch!",
  text3 = "auf welchen ihr uns in diesem Jahr antreffen könnt.",
  text4 = "Was wir machen und tun.",
  text5 = "stellen sich vor.",
  text6 = "für egal welche Anfrage.",
  url1 = "career.html",
  url2 = "offers.html",
  url3 = "events.html",
  url4 = "about.html",
  url5 = "members.html",
  url6 = "contact.html",
} = Astro.props;
---

<div class="grid_box">
  <!-- Headline -->
  <!-- <h1>Wähle deine Reise</h1> -->
  <!-- Headline -->
  <div class="grid">
    <div class="container">
      <h2>{headline1}</h2>
      <p>{text1}</p>
      <a href={url1}>
        <span class="link"></span>
      </a>
    </div>
    <div class="container">
      <h2>{headline2}</h2>
      <p>{text2}</p>
      <a href={url2}>
        <span class="link"></span>
      </a>
    </div>
    <div class="container">
      <h2>{headline3}</h2>
      <p>{text3}</p>
      <a href={url3}>
        <span class="link"></span>
      </a>
    </div>
    <div class="container">
      <h2>{headline4}</h2>
      <p>{text4}</p>
      <a href={url4}>
        <span class="link"></span>
      </a>
    </div>
    <div class="container">
      <h2>{headline5}</h2>
      <p>{text5}</p>
      <a href={url5}>
        <span class="link"></span>
      </a>
    </div>
    <div class="container">
      <h2>{headline6}</h2>
      <p>{text6}</p>
      <a href={url6}>
        <span class="link"></span>
      </a>
    </div>
  </div>
</div>
<style>
  @media (min-width: 250px) {
    .grid {
      text-align: center;
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 2rem;
      margin-top: 2rem;
    }

    .grid_box {
      background: var(--color-dark);
      padding: 0.1rem 2rem 2rem;
      box-shadow: 0px 0px 6px 0px var(--box-shadow);
    }

    h1 {
      text-align: center;
      max-width: 100%;
      color: var(--text-color-dark);
      font-size: calc(var(--text-font-size-mobile) + 0.5svw);
      padding: 2svw;
      text-shadow: 2px 4px 2px var(--text-shadow);
    }
    .container {
      font-size: var(--text-font-size-mobile);
      background-color: var(--color-background-secondary);
      color: var(--text-color-standard);
      padding: 10px;
      border-radius: 8px;
      cursor: pointer;
      box-shadow: 0px 1px 6px 1px var(--box-shadow);
      transition: transform 0.3s;
    }

    .container p {
      color: var(--color-light);
      padding: 0 1rem;
    }

    .container h2,
    .container p {
      z-index: 2;
      transition: color 0.3s;
    }

    .container:hover {
      animation: hover_up 0.3s forwards;
    }

    .container:not(:hover) {
      animation: hover_down 0.3s forwards;
    }

    .container:hover h2,
    .container:hover p {
      color: var(--color-primary);
    }

    .link {
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      z-index: 1;
    }
  }

  @media (min-width: 1000px) {
    .grid {
      grid-template-columns: repeat(3, minmax(250px, 1fr));
      margin-top: 4rem;
    }
  }

  @media (min-width: 768px) {
    .grid_box {
      padding: 0.1rem 5rem 5rem;
    }

    h1 {
      font-size: calc(var(--text-font-size) + 0.5svw);
    }

    .container {
      font-size: var(--text-font-size);
      padding: 20px;
      border-radius: 8px;
      cursor: pointer;
      box-shadow: 0px 1px 6px 1px var(--box-shadow);
      transition: transform 0.3s;
    }
  }
</style>
